### 27/05: Initial Setup and Gameboard Configuration
- The gameboard layout is out of scope for smaller devices.
- Resources: ChatGPT, StackOverflow ([responsive table layout for different screen sizes](https://stackoverflow.com/questions/47324577/responsive-table-layout-for-different-size-screen-android)).

```java
editText.setFilters(new InputFilter[] {new InputFilter.LengthFilter(1)});
editText.setLayoutParams(params);

if (boardSize == 3) {
    params.setMargins(20, 20, 20, 20);
    editText.setTextSize(TypedValue.COMPLEX_UNIT_SP, 40);
} else {
    params.setMargins(10, 10, 10, 10);
    editText.setTextSize(TypedValue.COMPLEX_UNIT_SP, 30);
}
```

- **Portrait Mode:** Set the screen orientation to portrait in `AndroidManifest.xml`:
```xml
<android:screenOrientation="portrait"/>
```

- **Mode Handling in `TTT.java`:**
```java
public void setMode(String mode) { this.mode = mode; }

cpu = new CPUPlay(context, rowsList, currentPlayer, editTextPositions, mode);
cpu.isCPUPlayer();
```
- Call this method at the start and restart in `MainActivity`.

---

### 28/05 - 31/05: Implementing ViewModel Architecture with LiveData
- Resources: ChatGPT.

```java
final Observer<List<TableRow>> nameObserver = new Observer<List<TableRow>>() {
    @Override
    public void onChanged(List<TableRow> tableRows) {
        for (TableRow tableRow : rowsList) {
            EditText editText = null;
            String editTextText = null;

            for (int i = 0; i < tableRow.getChildCount(); i++) {
                if (tableRow.getChildAt(i) instanceof EditText) {
                    editText = (EditText) tableRow.getChildAt(i);
                    editTextText = editText.getText().toString();
                    ttt.setEditTextProperties(editText, editTextText);
                }
            }
        }
    }
};
```
- [LiveData documentation](https://developer.android.com/topic/libraries/architecture/livedata).

---

### 31/05: Creating 5x5 Game IC

---

### 11/06: Implementing Winning Class
- After every move, update:
```java
viewModel.setCurrentEditText(editText);
```

---

### 12/06: Winning Class Continuation

---

### 23/06: Changes Made - Refactored Diagonal Handling
- Split "DIAGONAL" case into "MAINDIAGONAL" and "SECDIAGONAL" for clarity and maintainability.
- Simplified the secondary diagonal handling.

**Details:**
- **MAINDIAGONAL:** Handles the primary diagonal (top-left to bottom-right).
- **SECDIAGONAL:** Handles the secondary diagonal (top-right to bottom-left).

**Code Changes:**

```java
// MAINDIAGONAL case added
case "MAINDIAGONAL":
    // Logic for main diagonal
    break;

// SECDIAGONAL case updated
case "SECDIAGONAL":
    int size = rowList.size() - 1;
    int iSec = pair.first;
    int jSec = pair.second;
    int total = iSec + jSec;

    if (total == size) {
        iSec = 0;
        jSec = size;
    } else if (total < size) {
        iSec = 0;
        jSec = total;
    } else {
        iSec = total - size;
        jSec = size;
    }

    while (iSec <= size && jSec >= 0) {
        TableRow tr = rowList.get(iSec);
        if (tr.getChildAt(jSec) instanceof EditText) {
            EditText editText = (EditText) tr.getChildAt(jSec);
            if (editText.getText().toString().equals(text)) {
                winningMoves.add(editText);
            }
        }
        iSec++;
        jSec--;
    }
    break;
```

- **Delay Added:** Updated `setWinningAnim()` with a delay.

---

### 30/06: Animations and CPU Fixes
- New method: `scaleAnimation()`.
- Fixed the issue of the computer incrementing by 2 when it wins.
- Smoothened the transition by reducing the delay to be less than `setDuration(600)` in `MyAnimations.scaleAnimation`.

---

### 6th July: Game Over Dialogue
- Working on Game Over dialogues and better transitions.

---

### 15th July: Fix for `getWinningLine`
- Issue: `getWinningLine` returning null at `GameManager`.
- Solution: Using Singleton pattern for `GameManager`.

```java
private static GameManager instance;
public static GameManager getInstance(Context context, ViewModelStoreOwner owner) {
    if (instance == null) {
        instance = new GameManager(context, owner);
    }
    return instance;
}
```

---

### 28th July: Game Over Class Done
- Created a `GameOverActivity`.
- Using `Intent` Extra for passing current player data (as `ViewModel`'s currentPlayer doesn't work here).

---

### 12th August: Reset Game ViewModel & Start Game
- Working on the "Quit" button to reset the game and clear the `GameManager` instance.

---

### 23rd August: UI Update for `StartUp.xml`
- Made the UI responsive.

---

### 25th August: Working on Draw Class

---

### 26th August: Additional Changes
- Final touches on the draw class and finalizing responsive layout adjustments.

--- 
### 21st February: Google ADs Implementation
- Integrated Google Ads into the app to start showing advertisements.
- Fixed layout and display issues preventing ads from appearing correctly.
- Optimized ad loading for improved app performance and user experience.
