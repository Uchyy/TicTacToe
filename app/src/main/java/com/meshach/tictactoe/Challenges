
27/05
1. Gameboard xml is out of scope for smaller devices.
RESOURCES: ChatGPT, StackOverflow: https://stackoverflow.com/questions/47324577/responsive-table-layout-for-different-size-screen-android

```
editText.setFilters(new InputFilter[] {new InputFilter.LengthFilter(1)});
                editText.setLayoutParams(params);
                if (boardSize == 3) {
                    params.setMargins(20, 20, 20, 20);
                    //params.width = 150;
                    //params.height = 150;
                    editText.setTextSize(TypedValue.COMPLEX_UNIT_SP, 40);
                } else {
                    params.setMargins(10, 10, 10, 10);
                    editText.setTextSize(TypedValue.COMPLEX_UNIT_SP, 30);
                }
```

Set Orientation to always Portrait:
In manifest.xml : android:screenOrientation="portrait">

Mode issues!!
Method created in TTT.java
```
    public void setMode(String mode) {this.mode = mode; }

    cpu = new CPUPlay(context, rowsList, currentPlayer, editTextPositions, mode);
                cpu.isCPUPlayer();
```
In MainActivity:
    call at start and restart


LEARNING: VIEWMODEL ARCHITECTURE

28/05 - 31/05
Implementeing VIEWMODEL ARCHITECTURE WITH LIVEDATA
Reseource: ChatGPT
final Observer <List<TableRow>> nameObserver = new Observer<List<TableRow>>() {
            @Override
            public void onChanged(List<TableRow> tableRows) {
                for (TableRow tableRow : rowsList) {
                    EditText editText = null;
                    String editTextText = null;

                    for (int i = 0; i < tableRow.getChildCount(); i++) {
                        if (tableRow.getChildAt(i) instanceof EditText) {
                            editText = (EditText) tableRow.getChildAt(i);
                            editTextText = editText.getText().toString();
                            ttt.setEditTextProperties (editText, editTextText);
                        }
                    }
                }
            }

        };/
  LINK: https://developer.android.com/topic/libraries/architecture/livedata

31/05 - CREATING THE LOGIC FOR 5 X 5


11/06
SETTING WINNING CLASS
ADDING ``
 viewModel.setCurrentEditText(editText);
``
after every move

12/06
WIINING CLASS CONTD'

23/06
Changes Made:

Refactored Diagonal Handling:
Split the case "DIAGONAL" into case "MAINDIAGONAL" and case "SECDIAGONAL" for better clarity and maintainability.
Adjusted the logic for traversing the secondary diagonal.
Simplified the secondary diagonal logic to ensure correct iteration over elements and added matching elements to winningMoves.
Details:

MAINDIAGONAL:

Handles the primary diagonal (top-left to bottom-right).
SECDIAGONAL:

Handles the secondary diagonal (top-right to bottom-left).
Fixed the indices calculation and iteration logic to ensure all elements are correctly checked and matched elements are added to winningMoves.
Code Changes:

java
Copy code
// MAINDIAGONAL case added
case "MAINDIAGONAL":
    // Your existing or new logic for the main diagonal
    break;

// SECDIAGONAL case updated
case "SECDIAGONAL":
    int size = rowList.size() - 1;
    int iSec = pair.first;
    int jSec = pair.second;
    int total = iSec + jSec;

    if (total == size) {
        iSec = 0;
        jSec = size;
    } else if (total < size) {
        iSec = 0;
        jSec = total;
    } else {
        iSec = total - size;
        jSec = size;
    }

    Log.d("iSEC: ", String.valueOf(iSec));
    Log.d("jSEC: ", String.valueOf(jSec));

    while (iSec <= size && jSec >= 0) {
        TableRow tr = rowList.get(iSec);

        if (tr.getChildAt(jSec) instanceof EditText) {
            EditText editText = (EditText) tr.getChildAt(jSec);

            if (editText.getText().toString().equals(text)) {
                winningMoves.add(editText);
            }
        }
        iSec++;
        jSec--;
    }
    break;

    DELAY ADDED:
    Update setWinningAnim() with delay

    30/06

July 6
ANIMATIONS
NEW METHOD: scaleAnimation()
FIXED COMPUTER INCREMENT OF 2 ON WIN BY COMPUTER: adding return statement at CPUPlay
SMOOOTHER TRANSITION: make int delay (from Winner.setWinningAnim) to be less than setDuration(600) (from MyAnimations.scaleAnimation)

JULY 7
GAMEOVER DIALOGS:

JULY 15:
ISSUES: getWinningLine returns null at GameManager
FIX: Using Singleton Classs at GameManager
`
private static GameManager instance;
public static GameManager getInstance(Context context, ViewModelStoreOwner owner) {
        if (instance == null) {
            instance = new GameManager(context, owner);
        }
        return instance;
    }

    @GameOver: gameManager = GameManager.getInstance(context, owner);
    @TTT: gameManager = GameManager.getInstance(context, owner);
`

28th JUly,

GAMEOVER CLASS DONE.
WORKING ON DIALOG. CREATED A GAMEOVERACTIVITY
Getting Viewmodel's currentPlayer does not work. So Intent Extra.
Working on Activity. But i think using an alert might be better.

TO-DO LIST: 12/08 --->  RESET GAMEVIEW MODEL, AND GAMESTART. WORKING ON QUIT BUTTON
22/08 ---> QUIT BUTTON  DONE BY nulling GameManager instance at GameOver in StartUp.class
--->WORKED ON THE againBtn in GameOverActivity.class:
    --Added "singleTop" in Manifest
    --Overriding newIntent method in ManiActivity

<<<<<<< HEAD
23/08 ---> UI of StartUp.xml to make activity responsive - DONE

25/08 ---> Working on DrawClass -->

26/08
=======
23/08 ---> UI of StartUp.xml to make activity responsive
>>>>>>> 2115767a22ae870a064ff650adce03f81db3f92e


